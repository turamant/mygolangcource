<b>Введение</b>

Go — это язык программирования, в который уже встроен веб-сервер.
Пакет net/httpиз стандартной библиотеки содержит все функции протокола HTTP.
Сюда входят (помимо прочего) клиент HTTP и сервер HTTP.
В этом примере вы поймете, насколько просто создать веб-сервер,
который можно просматривать в браузере.

Регистрация обработчика запросов
Сначала создайте Handler, который получает все входящие HTTP-соединения от 
браузеров, HTTP-клиентов или API-запросов.

Handler в Go — это функция с такой сигнатурой:
<b>func (w http.ResponseWriter, r *http.Request)</b>

Функция получает два параметра:

http.ResponseWriter в котором вы пишете свой текстовый/html-ответ.
http.Request который содержит всю информацию об этом HTTP-запросе, включая такие
данные, как URL-адрес или поля заголовка.

Регистрация обработчика запросов на HTTP-сервере по умолчанию выполняется очень
просто:

<b>http.HandleFunc("/", func (w http.ResponseWriter, r *http.Request) {
    fmt.Fprintf(w, "Hello, you've requested: %s\n", r.URL.Path)
})</b>

Прослушивание HTTP-соединений
Обработчик запросов сам по себе не может принимать HTTP-соединения извне.
HTTP-сервер должен прослушивать порт, чтобы передавать соединения обработчику
запросов. Поскольку порт 80 в большинстве случаев является портом по умолчанию
для HTTP-трафика, этот сервер также будет его прослушивать.

Следующий код запустит HTTP-сервер Go по умолчанию и будет прослушивать
соединения на порту 80.
Вы можете перейти в браузере http://localhost/и увидеть, как ваш сервер
обрабатывает ваш запрос.

<b>http.ListenAndServe(":80", nil)</b>